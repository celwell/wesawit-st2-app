// Generated by CoffeeScript 1.3.3

Ext.define('WSI.view.WhosThereContainer', {
  extend: 'Ext.Container',
  xtype: 'whostherecontainer',
  id: 'whostherecontainer',
  requires: ['WSI.view.MediaStrip', 'Ext.util.DelayedTask', 'WSI.store.WhosThere'],
  config: {
    layout: 'fit',
    fullscreen: true,
    padding: 0,
    margin: 0,
    items: [
      {
        xtype: 'list',
        cls: 'whosthere',
        padding: 0,
        margin: 0,
        itemHeight: 66,
        refreshHeightOnUpdate: true,
        variableHeights: true,
        scrollable: true,
        disableSelection: true,
        pressedCls: false,
        scrollToTopOnRefresh: false,
        loadingText: 'loading...',
        emptyText: 'no one yet',
        expandedItem: false,
        store: null,
        listeners: {
          itemtap: function(list, index, target, record, e, eOpts) {
            var i, item, _ref, _ref1;
            if (list.config.expandedItem === false) {
              list.config.expandedItem = target;
              _ref = list.getViewItems();
              for (i in _ref) {
                item = _ref[i];
                if (item !== target) {
                  item.setStyle('opacity: 0.25');
                }
              }
              target.add({
                xtype: 'container',
                padding: '10 0 10 0',
                margin: '0 0 0 0',
                html: '<div class="container-inlet-triangle"></div>',
                style: {
                  background: '#444',
                  boxShadow: '0px -50px 50px -50px rgba(0,0,0,0.9) inset, 0px 50px 50px -50px rgba(0,0,0,0.9) inset'
                },
                layout: 'fit',
                height: 185,
                items: [
                  {
                    xtype: 'mediastrip',
                    homeButtonDest: 'to-whosthere-from-gallery',
                    padding: '0 0 0 10',
                    margin: 0,
                    cls: 'second-row-mediastrip',
                    style: {
                      background: 'transparent !important'
                    },
                    data: record.get('medias').length > 0 ? record.get('medias') : new Array(),
                    height: 165
                  }
                ]
              });
              list.refresh();
              list.getScrollable().getScroller().scrollTo(0, index * 66, true);
              list.getScrollable().getScroller().setDisabled(true);
              target.getAt(target.getItems().length - 1).setHidden(true);
              return target.getAt(target.getItems().length - 1).show({
                duration: 300,
                easing: 'ease',
                from: {
                  'opacity': '0'
                },
                to: {
                  'opacity': '1'
                }
              });
            } else {
              list.config.expandedItem.removeAt(list.config.expandedItem.getItems().length - 1, true);
              list.config.expandedItem = false;
              _ref1 = list.getViewItems();
              for (i in _ref1) {
                item = _ref1[i];
                item.setStyle('opacity: 1');
              }
              list.getScrollable().getScroller().setDisabled(false);
              return list.refresh();
            }
          }
        },
        itemTpl: Ext.create('Ext.XTemplate', "<img src='{[this.profileImageUrl(values.id)]}' class='profile-image' width='50' height='50' />", "<div class='name-line{[(values.friend ? ' friend' : '')]}'>", "<div class='name'>{username}</div>", "<div class='photo-count'>{[this.numOf(values.medias, 'photos')]}</div>", "<div class='video-count'>{[this.numOf(values.medias, 'videos')]}</div>", "</div>", {
          profileImageUrl: function(uid) {
            uid = uid.toString();
            if (uid.substr(0, 2) === 'fb') {
              return "https://graph.facebook.com/" + (uid.substr(2)) + "/picture?width=130&height=130";
            } else if (uid.substr(0, 10) === 'instagram_') {
              return 'resources/images/instagram-icon-square-114.png';
            } else if (uid.substr(0, 5) === 'vine_') {
              return 'resources/images/vine-icon-square-114.png';
            } else {
              return 'resources/images/tarsier-square-no-padding.png';
            }
          },
          numOf: function(medias, type) {
            var count, i, key, media;
            key = '';
            if (type === 'photos') {
              key = 'pid';
            }
            if (type === 'videos') {
              key = 'vid';
            }
            count = 0;
            for (i in medias) {
              media = medias[i];
              if (media[key] != null) {
                count++;
              }
            }
            return count;
          }
        })
      }
    ]
  },
  initialize: function() {
    return this.getAt(0).setStore(Ext.getStore('WhosThere'));
  },
  changeWhosThere: function(record) {
    if (!(util.getTenseOfToBe(record.get('dateTimeStart'), record.get('dateTimeEnd')) != null)) {
      this.getAt(0).setEmptyText('event hasn\'t started yet');
    }
    this.getAt(0).getStore().getProxy().config.extraParams.eid = record.get('id');
    this.getAt(0).setMasked({
      xtype: 'loadmask',
      message: ''
    });
    return this.getAt(0).getStore().load();
  }
});
