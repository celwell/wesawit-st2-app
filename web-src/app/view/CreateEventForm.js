// Generated by CoffeeScript 1.3.3

Ext.define('WSI.view.CreateEventForm', {
  extend: 'Ext.Container',
  xtype: 'createeventform',
  requires: ['Ext.Map'],
  config: {
    id: 'createeventform',
    layout: 'vbox',
    hidden: true,
    justCreated: true,
    margin: 0,
    padding: '0 10 0 10',
    width: '100%',
    scrollable: {
      direction: 'vertical',
      indicators: false,
      directionLock: true
    },
    listeners: {
      activate: function() {
        var that;
        that = this;
        if (that.config.justCreated) {
          that.config.justCreated = false;
          return that.show({
            type: 'slide',
            direction: 'up'
          });
        }
      }
    },
    eventData: {
      title: '',
      description: '',
      locationName: '',
      locationVicinity: '',
      locationLat: '0',
      locationLng: '0',
      locationType: '',
      reference: '',
      dateTimeStart: '',
      dateTimeEnd: '',
      category: ''
    }
  },
  initialize: function() {
    var askCategory, askDescription, askTitle, askWhen, askWhere, cancelButton, submitButton;
    askTitle = {
      xtype: 'container',
      layout: 'hbox',
      margin: '10 0 0 0',
      flex: 0,
      items: [
        {
          xtype: 'component',
          width: 65,
          height: 40,
          padding: '10 10 15 10',
          html: 'What',
          style: {
            fontWeight: 'bold',
            fontSize: '15px',
            textTransform: 'lowercase',
            background: '#f5f5f5',
            textShadow: '0px 1px 0px #eee',
            color: '#777',
            border: '1px solid #aaa',
            borderRight: 'none',
            borderTopLeftRadius: '4px'
          }
        }, {
          xtype: 'textfield',
          flex: 1,
          name: 'Event_Title',
          height: 40,
          placeHolder: 'Event Title (60 characters max)',
          required: true,
          maxLength: 60,
          style: {
            background: '#F5F5F5',
            textShadow: '0px 1px 0px #eee',
            color: '#006AB7 !important',
            border: '1px solid #aaa',
            borderLeft: 'none',
            borderTopRightRadius: '4px',
            marginLeft: '-1px'
          }
        }
      ]
    };
    askCategory = {
      xtype: 'container',
      layout: 'hbox',
      margin: '10 0 0 0',
      flex: 0,
      items: [
        {
          xtype: 'component',
          flex: 1,
          tpl: ['<select name="blahblahlahlbahlba" placeHolder="Category" onchange="document.getElementById(\'Event_Category\').childNodes[1].childNodes[0].childNodes[0].value = this.value;">', '<option value="" disabled="diasbled" selected="selected">Category</option>', '<tpl for=".">', '<option value="{value}">{text}</option>', '</tpl>', '</select>'],
          data: null
        }, {
          xtype: 'textfield',
          id: 'Event_Category',
          name: 'Event_Category',
          value: '',
          hidden: true
        }
      ]
    };
    askDescription = {
      xtype: 'container',
      layout: 'hbox',
      margin: '10 0 0 0',
      flex: 0,
      items: [
        {
          xtype: 'textareafield',
          name: 'Event_Description',
          rows: 1,
          maxLength: 200,
          placeHolder: 'Description (optional)',
          flex: 1,
          value: '',
          style: {
            background: '#F5F5F5',
            fontSize: '13px',
            textShadow: '0px 1px 0px #eee',
            color: '#444',
            border: '1px solid #aaa',
            borderRadius: '4px'
          }
        }
      ]
    };
    askWhere = {
      xtype: 'container',
      layout: 'hbox',
      margin: '0 0 0 0',
      flex: 0,
      items: [
        {
          xtype: 'component',
          width: 65,
          height: 40,
          padding: '10 10 15 10',
          html: 'Where',
          style: {
            fontWeight: 'bold',
            fontSize: '15px',
            textTransform: 'lowercase',
            background: '#f5f5f5',
            textShadow: '0px 1px 0px #eee',
            color: '#777',
            border: '1px solid #aaa',
            borderTop: 'none',
            borderRight: 'none'
          }
        }, {
          xtype: 'component',
          flex: 1,
          tpl: '<div class="form-group-toggle in-form" style="font-size: 13px !important; font-weight: normal !important; padding: 11px 7px 9px 7px !important; color: #006AB7 !important; background: #f5f5f5 !important;border-left: none !important;height:40px !important;border-radius:0px !important;border-top:none !important;"><span style="max-width:190px !important;display:inline-block !important;white-space:nowrap !important;overflow:hidden !important;text-overflow:ellipsis !important;">{locationName}</span> <img src="resources/images/disclosure.png" width="11" height="15" /></div>',
          data: {
            locationName: '<div class="x-loading-spinner-outer" style="margin-top: 0px;"><div class="x-loading-spinner" style="margin: 0px auto; font-size: 18px !important;"><span class="x-loading-top"></span><span class="x-loading-right"></span><span class="x-loading-bottom"></span><span class="x-loading-left"></span></div></div>',
            locationVicinity: '',
            locationLat: '0',
            locationLng: '0',
            reference: ''
          },
          style: {
            marginLeft: '-1px'
          },
          listeners: {
            tap: {
              element: 'element',
              fn: function(e) {
                return this.getParent().getParent().showWhere();
              }
            }
          }
        }
      ]
    };
    askWhen = {
      xtype: 'container',
      layout: 'hbox',
      margin: '0 0 0 0',
      flex: 0,
      items: [
        {
          xtype: 'component',
          width: 65,
          height: 40,
          padding: '10 10 15 10',
          html: 'When',
          style: {
            fontWeight: 'bold',
            fontSize: '15px',
            textTransform: 'lowercase',
            background: '#f5f5f5',
            textShadow: '0px 1px 0px #eee',
            color: '#777',
            border: '1px solid #aaa',
            borderTop: 'none',
            borderRight: 'none',
            borderBottomLeftRadius: '4px'
          }
        }, {
          xtype: 'component',
          flex: 9,
          tpl: '<div class="form-group-toggle in-form" style="font-size: 13px !important; white-space:nowrap !important;overflow:hidden !important;text-overflow:ellipsis !important;font-size: 13px !important; font-weight: normal !important; padding: 11px 7px 9px 7px !important; color: #006AB7 !important; background: #f5f5f5 !important; border-left: none !important;height:40px !important;border-bottom-left-radius: 0px !important;border-top-left-radius: 0px !important;border-top-right-radius: 0px !important;border-top:none !important;"><span style="max-width:220px !important;display:inline-block !important;white-space:nowrap !important;overflow:hidden !important;text-overflow:ellipsis !important;">{[(values.dateTimeStart == "Now" ? "Now" : Ext.util.Format.date(values.dateTimeStart, "M j, Y") + " at " + Ext.util.Format.date(values.dateTimeStart, " g:i a"))]}</span> <img src="resources/images/disclosure.png" width="11" height="15" /></div>',
          data: {
            dateTimeStart: 'Now',
            dateTimeEnd: ''
          },
          style: {
            marginLeft: '-1px'
          },
          listeners: {
            tap: {
              element: 'element',
              fn: function(e) {
                return this.getParent().getParent().showWhen();
              }
            }
          }
        }
      ]
    };
    submitButton = {
      xtype: 'component',
      flex: 1,
      html: '<div class="form-group-toggle create" style="text-align: center !important;font-size: 18px !important;padding-top:5px !important;padding-bottom:5px !important;">Post Event</div>',
      listeners: {
        tap: {
          element: 'element',
          fn: function(e) {
            return this.up().up().onCreateEventFormSubmit();
          }
        }
      }
    };
    cancelButton = {
      xtype: 'component',
      flex: 0,
      padding: '0 10 0 0',
      html: '<div class="form-group-toggle" style="text-align: center !important;font-size: 17px !important;padding-top:6px !important;padding-bottom:7px !important;">Cancel</div>',
      listeners: {
        tap: {
          element: 'element',
          fn: function(e) {
            return this.up().up().onCancelButtonTap();
          }
        }
      }
    };
    return this.add([
      {
        xtype: 'component',
        hidden: true,
        html: "<div id='gmap-container'></div>",
        listeners: {
          initialize: function(c) {
            var map;
            map = new google.maps.Map(c.bodyElement.dom.children[0].children[0]);
            return google.maps.event.addListenerOnce(map, 'idle', function() {
              if (c.up().getAt(2).getAt(1).getData().locationName === '' || c.up().getAt(2).getAt(1).getData().locationName === 'Loading...' || c.up().getAt(2).getAt(1).getData().locationName === '<div class="x-loading-spinner-outer" style="margin-top: 0px;"><div class="x-loading-spinner" style="margin: 0px auto; font-size: 18px !important;"><span class="x-loading-top"></span><span class="x-loading-right"></span><span class="x-loading-bottom"></span><span class="x-loading-left"></span></div></div>') {
                return c.up().config.genSuggTimeout = setTimeout((function() {
                  return c.up().fireEvent('generateSuggestions', null, true);
                }), 500);
              }
            });
          }
        }
      }, askTitle, askWhere, askWhen, askDescription, askCategory, {
        xtype: 'container',
        padding: '10 0 5 0',
        flex: 0,
        height: 50,
        layout: 'hbox',
        pack: 'center',
        items: [cancelButton, submitButton]
      }
    ]);
  },
  onCancelButtonTap: function() {
    return this.fireEvent('homeButtonTap');
  },
  onCreateEventFormSubmit: function() {
    var dateTimeEnd, dateTimeStart;
    this.config.eventData.title = this.getItems().getAt(1).getItems().getAt(1).getValue();
    this.config.eventData.description = this.getItems().getAt(4).getItems().getAt(0).getValue();
    this.config.eventData.locationName = this.getItems().getAt(2).getItems().getAt(1).getData().locationName;
    this.config.eventData.locationVicinity = this.getItems().getAt(2).getItems().getAt(1).getData().locationVicinity;
    this.config.eventData.locationLat = this.getItems().getAt(2).getItems().getAt(1).getData().locationLat;
    this.config.eventData.locationLng = this.getItems().getAt(2).getItems().getAt(1).getData().locationLng;
    this.config.eventData.locationType = this.getItems().getAt(2).getItems().getAt(1).getData().locationType;
    this.config.eventData.reference = this.getItems().getAt(2).getItems().getAt(1).getData().reference;
    dateTimeStart = this.getItems().getAt(3).getItems().getAt(1).getData().dateTimeStart;
    if (dateTimeStart === 'Now') {
      dateTimeStart = new Date();
    }
    this.config.eventData.dateTimeStart = dateTimeStart;
    dateTimeEnd = this.getItems().getAt(3).getItems().getAt(1).getData().dateTimeEnd;
    if (dateTimeEnd === '') {
      dateTimeEnd = new Date(dateTimeStart.getTime());
      dateTimeEnd.setHours(dateTimeEnd.getHours() + 3);
    }
    this.config.eventData.dateTimeEnd = dateTimeEnd;
    this.config.eventData.category = this.getItems().getAt(5).getItems().getAt(1).getValue();
    return this.fireEvent('createEventFormSubmit');
  },
  showWhere: function() {
    return this.fireEvent('showWhereContainer');
  },
  showWhen: function() {
    return this.fireEvent('showWhenContainer');
  }
});
