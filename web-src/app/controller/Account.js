// Generated by CoffeeScript 1.3.3

Ext.define('WSI.controller.Account', {
  extend: 'Ext.app.Controller',
  config: {
    refs: {
      accountPanel: 'account',
      wesawitLogin: 'wesawitlogin',
      wesawitRegister: 'wesawitregister',
      feedbackForm: 'feedbackform',
      wesawitPasswordField: '#wesawitpasswordfield',
      facebookLoginButton: '#facebookloginbutton',
      wesawitLoginButton: '#wesawitloginbutton'
    },
    control: {
      accountPanel: {
        facebookLoginButtonTap: 'onFacebookLoginButtonTap',
        wesawitLoginButtonTap: 'onWesawitLoginButtonTap',
        wesawitLogoutButtonTap: 'onWesawitLogoutButtonTap',
        wesawitRegisterButtonTap: 'onWesawitRegisterButtonTap'
      },
      wesawitLogin: {
        submitForm: 'onSubmitWesawitLoginForm'
      },
      wesawitRegister: {
        submitForm: 'onSubmitWesawitRegisterForm'
      },
      feedbackForm: {
        submitForm: 'onSubmitFeedbackForm'
      }
    }
  },
  currentlyLoggingIn: false,
  onFacebookLoginButtonTap: function() {
    var ctrl,
      _this = this;
    if (!navigator.onLine) {
      return navigator.notification.alert('Unable to connect to internet.', (function() {}), 'Oops!');
    } else {
      if (Ext.os.is.Android) {
        window.plugins.childBrowser.onClose = function() {
          return true;
        };
        window.plugins.childBrowser.onLocationChange = function(url) {
          var d, dataArr, dataStr, _i, _len;
          if (util.DEBUG) {
            console.log('onLocationChange called');
          }
          if (util.DEBUG) {
            console.log(url);
          }
          if (url.indexOf('%23closeChildBrowser') !== -1) {
            dataStr = url.substr(url.indexOf('%23closeChildBrowser') + 21);
          } else if (url.indexOf('#closeChildBrowser') !== -1) {
            dataStr = url.substr(url.indexOf('#closeChildBrowser') + 19);
          }
          if (dataStr != null) {
            dataArr = dataStr.split('/');
            for (_i = 0, _len = dataArr.length; _i < _len; _i++) {
              d = dataArr[_i];
              window.localStorage.setItem(decodeURIComponent(decodeURIComponent(d.split('=')[0])), decodeURIComponent(decodeURIComponent(d.split('=')[1])));
            }
            _this.loginStateChanged();
            _this.getAccountPanel().removeAll(true, true);
            _this.getAccountPanel().populateWithProperItems();
            _this.getAccountPanel().getParent().getParent().getParent().getParent().getTabBar().getItems().getAt(2).setBadgeText('');
            return window.plugins.childBrowser.close();
          }
        };
        return window.plugins.childBrowser.showWebPage('https://m.facebook.com/dialog/oauth/?scope=email,user_birthday,user_events,publish_actions&client_id=361157600604985&redirect_uri=http://wesawit.com/login/mobile_receive', {
          showLocationBar: true
        });
      } else {
        ctrl = this;
        return window.plugins.facebookConnect.login({
          permissions: ["email", "user_birthday", "user_events", "publish_actions"],
          appId: "361157600604985"
        }, function(result) {
          if ((result['accessToken'] != null) && result['accessToken'] !== '' && !(window.localStorage.getItem('wsitoken') != null) && !ctrl.currentlyLoggingIn) {
            ctrl.currentlyLoggingIn = true;
            Ext.Viewport.setMasked({
              xtype: 'loadmask',
              message: ''
            });
            return Ext.Ajax.request({
              url: "http://wesawit.com/login/native_fb",
              method: 'POST',
              params: {
                'accessToken': result['accessToken']
              },
              timeout: 15000,
              success: function(response) {
                var key, resp, val;
                Ext.Viewport.setMasked(false);
                resp = Ext.decode(response.responseText);
                if (resp.success) {
                  delete resp.success;
                  for (key in resp) {
                    val = resp[key];
                    window.localStorage.setItem(key, val);
                  }
                  ctrl.loginStateChanged();
                  ctrl.getAccountPanel().removeAll(true, true);
                  ctrl.getAccountPanel().populateWithProperItems();
                  ctrl.getAccountPanel().getParent().getParent().getParent().getParent().getTabBar().getItems().getAt(2).setBadgeText('');
                  return ctrl.currentlyLoggingIn = false;
                } else {
                  navigator.notification.alert(resp.error_message, (function() {}), 'Oops!');
                  return ctrl.currentlyLoggingIn = false;
                }
              },
              failure: function(response) {
                Ext.Viewport.setMasked(false);
                if ((response.timedout != null) && response.timedout) {
                  navigator.notification.alert('Your internet connection seems to be going too slow.', (function() {}), 'Hmm...');
                } else {
                  navigator.notification.alert('Please try again later.', (function() {}), 'Oops!');
                }
                return ctrl.currentlyLoggingIn = false;
              }
            });
          }
        });
      }
    }
  },
  onWesawitLogoutButtonTap: function() {
    if (!navigator.onLine) {
      return navigator.notification.alert('Unable to connect to internet.', (function() {}), 'Oops!');
    } else {
      window.localStorage.removeItem('wsitoken');
      window.localStorage.removeItem('uid');
      window.localStorage.removeItem('username');
      window.localStorage.removeItem('fbid');
      this.getAccountPanel().removeAll(true, true);
      this.getAccountPanel().populateWithProperItems();
      this.getAccountPanel().getParent().getParent().getParent().getParent().getTabBar().getItems().getAt(2).setBadgeText('Log in here');
      return this.loginStateChanged();
    }
  },
  onSubmitWesawitLoginForm: function() {
    if (!navigator.onLine) {
      return navigator.notification.alert('Unable to connect to internet.', (function() {}), 'Oops!');
    } else {
      Ext.Viewport.setMasked({
        xtype: 'loadmask',
        message: ''
      });
      return this.getWesawitLogin().submit({
        url: 'http://wesawit.com/service/login',
        method: 'POST',
        params: {
          'api_key': '---REMOVED---'
        },
        success: function(form, result) {
          window.localStorage.setItem('wsitoken', result.token);
          window.localStorage.setItem('uid', result.uid);
          window.localStorage.setItem('username', result.username);
          this.loginStateChanged();
          this.getAccountPanel().getParent().getParent().getParent().getParent().getTabBar().getItems().getAt(2).setBadgeText('');
          Ext.Viewport.setMasked(false);
          this.getAccountPanel().removeAll(true, true);
          return this.getAccountPanel().populateWithProperItems();
        },
        failure: function(form, result) {
          Ext.Viewport.setMasked(false);
          navigator.notification.alert(result.error_message, (function() {}), 'Error');
          return this.getWesawitPasswordField().reset();
        },
        scope: this
      });
    }
  },
  onSubmitWesawitRegisterForm: function() {
    if (!navigator.onLine) {
      return navigator.notification.alert('Unable to connect to internet.', (function() {}), 'Oops!');
    } else {
      Ext.Viewport.setMasked({
        xtype: 'loadmask',
        message: ''
      });
      return this.getWesawitRegister().submit({
        url: 'http://wesawit.com/service/register',
        method: 'POST',
        params: {
          'api_key': '---REMOVED---'
        },
        success: function(form, res) {
          return Ext.Ajax.request({
            url: 'http://wesawit.com/service/login',
            method: 'POST',
            params: {
              'api_key': '---REMOVED---',
              'login': form.getValues().username,
              'password': form.getValues().password
            },
            scope: this,
            success: function(response) {
              var result;
              result = Ext.JSON.decode(response.responseText);
              window.localStorage.setItem('wsitoken', result.token);
              window.localStorage.setItem('uid', result.uid);
              window.localStorage.setItem('username', result.username);
              this.loginStateChanged();
              this.getAccountPanel().getParent().getParent().getParent().getParent().getTabBar().getItems().getAt(2).setBadgeText('');
              Ext.Viewport.setMasked(false);
              this.getAccountPanel().removeAll(true, true);
              return this.getAccountPanel().populateWithProperItems();
            },
            failure: function() {
              Ext.Viewport.setMasked(false);
              navigator.notification.alert(result.error_message, (function() {}), 'Error');
              return this.getWesawitPasswordField().reset();
            }
          });
        },
        failure: function(form, result) {
          Ext.Viewport.setMasked(false);
          return navigator.notification.alert(result.error_message, (function() {}), 'Error');
        },
        scope: this
      });
    }
  },
  onSubmitFeedbackForm: function() {
    var i, p, _i, _ref;
    if (!navigator.onLine) {
      return navigator.notification.alert('Unable to connect to internet.', (function() {}), 'Oops!');
    } else {
      Ext.Viewport.setMasked({
        xtype: 'loadmask',
        message: ''
      });
      p = new Array();
      for (i = _i = 0, _ref = localStorage.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        p[window.localStorage.key(i)] = window.localStorage.getItem(window.localStorage.key(i));
      }
      p['api_key'] = '---REMOVED---';
      p['Device_Name'] = typeof device !== "undefined" && device !== null ? device.name : void 0;
      p['Device_Platform'] = typeof device !== "undefined" && device !== null ? device.platform : void 0;
      p['Device_UUID'] = typeof device !== "undefined" && device !== null ? device.uuid : void 0;
      p['Device_Version'] = typeof device !== "undefined" && device !== null ? device.version : void 0;
      p['Device_Cordova'] = typeof device !== "undefined" && device !== null ? device.cordova : void 0;
      p['APP_VERSION'] = window.util.APP_VERSION;
      p['API_VERSION'] = window.util.API_VERSION;
      delete p['listOfCountries'];
      delete p['wsitoken'];
      return this.getFeedbackForm().submit({
        url: 'http://wesawit.com/feedback/app',
        method: 'POST',
        params: p,
        success: function(form, result) {
          navigator.notification.alert('Your feedback is extremely valuable to us!', (function() {}), 'Thank you!');
          Ext.Viewport.setMasked(false);
          this.getAccountPanel().removeAll(true, true);
          return this.getAccountPanel().populateWithProperItems();
        },
        failure: function(form, result) {
          Ext.Viewport.setMasked(false);
          return navigator.notification.alert(result.error_message, (function() {}), 'Error');
        },
        scope: this
      });
    }
  },
  loginStateChanged: function() {
    return Ext.data.StoreManager.each(function() {
      if (this.isLoaded()) {
        return this.load();
      }
    });
  }
});
